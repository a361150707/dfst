<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd    
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd    
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.0.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">
	<mvc:annotation-driven />
	<context:annotation-config />
	<mvc:default-servlet-handler/>
   
	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.ennuova" />

	<!-- 导入外部的properties文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 支持spring3.0新的mvc注解 -->
	<!-- <mvc:annotation-driven /> -->
		<!-- 加载swagger配置 -->
	<bean id="documentationConfig" class="com.mangofactory.swagger.springmvc.example.config.CustomDocumentationConfig"/>
    <bean id="extensibilityModule" class="com.mangofactory.swagger.springmvc.example.config.ExampleExtensibilityModule" />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!--对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 处理文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="5400000"/> 
	</bean> 
    
	<!-- 缓存配置(两种) -->
	<!-- 启用缓存注解功能(请将其配置在Spring主配置文件中) -->
	<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
	    <property name="configLocation" value="classpath:ehcache.xml"></property>
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
	    <property name="cacheManager" ref="cacheManagerFactory"></property>
	</bean> 
	<!-- <ehcache:annotation-driven cache-manager="ehCacheManager" />
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/> -->
    
    <!-- 拦截器配置 -->
	<mvc:interceptors >    
        <mvc:interceptor> 
        	<!-- 拦截/后的所有请求，包括静态资源文件 -->
            <mvc:mapping path="/*" />
            <bean class="com.ennuova.intercept.BaseInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
	<!-- 异常处理 -->
	<!-- <bean class="com.vrapp.exception.MyException" id="exceptionResolver"> 
		配合自定义的异常解析器 <property name="exceptionMappings"> <props> <prop key="com.vrapp.exception.MyException">MyErrorException</prop> 
		<prop key="java.lang.Exception">MyErrorException</prop> </props> </property> 
		</bean> -->
</beans>