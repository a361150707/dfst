<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
   
	<!-- <context:component-scan  base-package="com.vrapp"/> -->
	  
	<!-- 支持aop注解 -->
	<aop:aspectj-autoproxy />
	
	<!-- 数据库配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
	    <property name="driverClassName" value="${driverClass}"></property>
	    <property name="url" value="${jdbcUrl}"></property> 
	    <property name="username" value="${user}"></property>
	    <property name="password" value="${password}"></property>
    </bean>

   	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
	 	<property name="dataSource">  
	     	<ref bean="dataSource" />
	 	</property>
		<property name="hibernateProperties">
		    <props>  
		     	<!-- key的名字前面都要加hibernate. -->
		        <prop key="hibernate.dialect">${hibernate.dialect}</prop>
		         
		        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
		        <prop key="hibernate.format_sql">${hibernate.formatSql}</prop>
		         
		         <!-- 
		        <prop key="hibernate.hbm2ddl.auto">update</prop>
		         -->
		    </props>
		</property>
		<property name="packagesToScan">
			 <list>
                <!-- 可以加多个包 -->
				<value>com.ennuova.entity</value>
            </list>
		</property>
   	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!--配置一个JdbcTemplate实例-->
	<bean id="jdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">   
	     <property name="dataSource" ref="dataSource"/>   
	</bean>

	<!-- 配置事务管理 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置事务异常封装 -->
   	<bean id="persistenceExceptionTranslationPostProcessor" 
       class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
		
	<!-- 使用注解定义事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 注解拦截界面 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes> 
			<tx:method name="find*"  read-only="true" propagation="NOT_SUPPORTED"/>
			<!-- get开头的方法不需要在事务中运行 。 有些情况是没有必要使用事务的，比如获取数据。开启事务本身对性能是有一定的影响的--> 
			<tx:method name="*"/>    <!-- 其他方法在实务中运行 --> 
		</tx:attributes>
	</tx:advice>
	
	<!-- AOP拦截器设置 -->
	<aop:config>
		<aop:pointcut expression="execution(public * com.ennuova.*.*(..))" id="businessService"/> 
		<aop:advisor advice-ref="txAdvice" pointcut-ref="businessService" /> 
	</aop:config> 
</beans>